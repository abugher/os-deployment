#!/bin/bash


function write_image() {
  output "Writing image."
  # https://www.armbian.com/orange-pi-pc-plus/
  # https://dl.armbian.com/orangepipcplus/Debian_stretch_next.7z.torrent
  image="${image:-imageUnset}"
  card_device="${card_device:-deviceUnset}"
  test -e "${image}" \
    || fail "Image file not found:  '${image}'"
  test -b "${card_device}" \
    || fail "Device file not found:  '${card_device}'"
  eval dd if='"${image}"' bs=1M status=none \| pv "2>&${debug_level_command_output}" \| sudo dd bs=1M of='"${card_device}"' status=none ">&${debug_level_command_output}" \
    || fail "Failed to write image."
  eval sudo tune2fs -i 0 -c 0 '"${root_partition}"' ">&${debug_level_command_output}" \
    || fail "Failed to tune root filesystem."
  if test 'set' = "${fix_gpt+set}"; then
    fix_gpt
  fi
}


function zero_out() {
  output "Zeroing out storage device."
  eval dd if=/dev/zero bs=1M status=none \| pv "2>&${debug_level_command_output}" \| sudo dd bs=1M of='"${card_device}"' status=none ">&${debug_level_command_output}"
  ret="${?}"
  if ! test "1" == "${ret}"; then
    # No exit codes are documented other than zero and non-zero.  Attempting to
    # write more than a device can hold (infinite zeroes) was observed to yield
    # a return code of 1.  That may change.  Other failure conditions may or
    # may not produce different exit codes.
    fail "Zeroing out storage device - dd returned unexpected exit code:  '${ret}'"
  fi
}
