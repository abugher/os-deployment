#!/bin/bash


function configure_os() {
  if test 'set' = "${use_big_partition:+set}"; then
    output "Writing big partition line to /etc/fstab."
    sudo tee -a "${target_mount_point}"/etc/fstab \
      <<< "LABEL=${big_partition_label} ${big_partition_mount_point} f2fs defaults,noatime,nodiratime 0 2" \
      || fail "Failed to write big partition line to /etc/fstab"
  fi

  if test "set" = "${log_to_disk:+set}"; then
    # log2ram is probably good for sd card life.
    output "Disabling log2ram."
    sudo sed -i 's/^ENABLED=.*$/ENABLED=false/' "${target_mount_point}"/etc/default/armbian-ramlog \
      || fail "Failed to disabled log2ram."
  fi

  write_root_password_hash

  output "Deleting password hash for pi."
  sudo sed -i 's/^pi:.*$/pi:*:18409:0:99999:7:::/' "${target_mount_point}"/etc/shadow \
    || fail "Failed to delete password hash for pi."

  output "Disabling password authentication for pi."
  sudo sed -Ei 's/^pi:[^:]*:(.*)$/pi:*:\1\/home\/pi:\/bin\/bash/' "${target_mount_point}"/etc/passwd \
    || fail "Failed to disable password authentication for pi."

  for dir in "${create_directories[@]}"; do
    output "Creating directory:  ${target_mount_point}/${dir}"
    sudo mkdir -p "${target_mount_point}/${dir}"
  done

  for file in "${remove_files[@]}"; do 
    output "Removing:  ${file}"
    sudo rm -f "${target_mount_point}"/$file \
      || fail "Failed to remove:  ${file}"
  done

  for file in "${null_link_files[@]}"; do
    output "Replacing file with symlink to /dev/null:  '${file}'"
    sudo ln -s /dev/null "${target_mount_point}"/$file \
      || fail "Failed to replace file with symlink to /dev/null:  '${file}'"
  done

  output "Reading WPA PSK from pass."
  wpa_psk=$(pass show aaron/network/"${network_name}"/wpa_psk) \
    || fail "Failed to read WPA PSK from pass."

  output "Templating network interface configuration."
  if test 'static' = $network_addressing; then
    template wireless_interface_conf_static /etc/network/interfaces.d/"${wireless_interface}"
  elif test 'dhcp' = $network_addressing; then
    template wireless_interface_conf_dhcp /etc/network/interfaces.d/"${wireless_interface}"
  else
    fail "\$network_addressing not set or invalid.  (${network_addressing})"
  fi
  template wired_interface_conf /etc/network/interfaces.d/"${wired_interface}"

  otuput "Writing auto line to interfaces file."
  sudo tee -a "${target_mount_point}"/etc/network/interfaces \
    <<< "auto ${active_interface}" \
    || fail "Failed to write auto line to interfaces file."

  template sshd_config /etc/ssh/sshd_config

  output "Writing ssh service file."
  sudo ln -s /lib/systemd/system/ssh.service "${target_mount_point}"/etc/systemd/system/default.target.wants/ssh.service \
    || fail "Failed to write ssh service file."

  output "Initializing SSH host key (private)."
  sudo touch "${target_mount_point}"/etc/ssh/ssh_host_rsa_key \
    || fail "Failed to initialize SSH host key (private)."
  output "Setting permissions on SSH host key (private)."
  sudo chmod 0600 "${target_mount_point}"/etc/ssh/ssh_host_rsa_key \
    || fail "Failed to set permissions on SSH host key (private)."

  host_key_priv_file=../sensitive_ansible/inventory/hosts/${host}/files/ssh_keys/ssh_host_rsa_key
  output "Writing SSH host key (private)."
  test -e "${host_key_priv_file}" \
    || fail "SSH host key (private) is missing."
  sudo tee "${target_mount_point}"/etc/ssh/ssh_host_rsa_key \
    < "${host_key_priv_file}" \
    || fail "Failed to write SSH host key (private)."

  host_key_pub_file=../ansible/inventory/hosts/${host}/files/ssh_keys/ssh_host_rsa_key.pub
  output "Writing SSH host key (public)."
  test -e "${host_key_pub_file}" \
    || fail "SSH host key (public) is missing."
  sudo tee "${target_mount_point}"/etc/ssh/ssh_host_rsa_key.pub \
    < "${host_key_pub_file}" \
    || fail "Failed to write SSH host key (public)."

  output "Installing authorized key."
  sudo tee "${target_mount_point}"/root/.ssh/authorized_keys < /home/aaron/.ssh/public \
    || fail "Failed to install authorized key."

  template rc_local_conf /etc/rc.local

  if test "yes" = "${kick_wifi}"; then
    template kick_wifi_conf /usr/local/bin/kick_wifi

    output "Setting permissions (0755) on kick_wifi script."
    sudo chmod 0755 "${target_mount_point}"/usr/local/bin/kick_wifi \
      || fail "Failed to chmod 0755 kick_wifi script."

    output "Appending kick_wifi line to:  /etc/rc.local"
    sudo tee -a "${target_mount_point}"/etc/rc.local \
      <<< '/usr/local/bin/kick_wifi' \
      || fail "Failed to append kick_wifi line to:  /etc/rc.local"
  fi

  output "Writing 'exit 0' line to:  /etc/rc.local"
  sudo tee -a "${target_mount_point}"/etc/rc.local \
    <<< 'exit 0' \
    || fail "Failed to write 'exit 0' line to:  /etc/rc.local"
}

